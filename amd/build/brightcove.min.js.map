{"version":3,"sources":["../src/brightcove.js"],"names":["define","$","Ajax","loadBrightCoveJs","accountId","playerId","window","require","config","waitSeconds","set_course_module_progress","id","videoid","progress","promise","call","methodname","args","then","results","console","log","fail","e","html5playerOnLoadMetaData","player","on","playListsItems","playlist","forEach","item","index","info","setInterval","currentTime","init","initBrightCovePlayer","myPlayer","videojs","getPlayer"],"mappings":"AAAAA,OAAM,8BAAC,CAAC,QAAD,CAAU,WAAV,CAAD,CAAyB,SAAUC,CAAV,CAAaC,CAAb,CAAmB,IACxCC,CAAAA,CAAgB,CAAG,SAACC,CAAD,CAAYC,CAAZ,CAAyB,CAC9CC,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAsB,CAClB,MAAS,CACL,4CAAwCJ,CAAxC,aAAqDC,CAArD,sBADK,CADS,CAIlBI,WAAW,CAAE,EAJK,CAAtB,CAMH,CAR6C,CAUxCC,CAA0B,CAAG,SAACC,CAAD,CAAKC,CAAL,CAAcC,CAAd,CAA2B,CAC1D,GAAIC,CAAAA,CAAO,CAEDZ,CAAI,CAACa,IAAL,CAAU,CAAC,CACjBC,UAAU,CAAE,qCADK,CAEjBC,IAAI,CAAE,CACFN,EAAE,CAAFA,CADE,CAEFC,OAAO,CAAPA,CAFE,CAGFC,QAAQ,CAARA,CAHE,CAFW,CAAD,CAAV,CAFV,CAWAC,CAAO,CAAC,CAAD,CAAP,CAAWI,IAAX,CAAgB,SAASC,CAAT,CAAkB,CAC9BC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAEH,CAHD,EAGGG,IAHH,CAGQ,SAACC,CAAD,CAAO,CACXH,OAAO,CAACC,GAAR,CAAYE,CAAZ,CACH,CALD,CAMH,CA5B6C,CA+BxCC,CAAyB,CAAG,SAACC,CAAD,CAAY,CAG1CA,CAAM,CAACC,EAAP,CAAU,gBAAV,CAA4B,UAAW,CAEnC,GAAMC,CAAAA,CAAc,CAAGF,CAAM,CAACG,QAAP,EAAvB,CACAD,CAAc,CAACE,OAAf,CAAwB,SAACC,CAAD,CAAOC,CAAP,CAAmB,CACvCX,OAAO,CAACC,GAAR,CAAYS,CAAZ,EACAV,OAAO,CAACC,GAAR,CAAYU,CAAZ,CACH,CAHD,CAIH,CAPD,EAUAN,CAAM,CAACC,EAAP,CAAU,SAAV,CAAoB,UAAM,CACtBN,OAAO,CAACY,IAAR,qBACWC,WAAW,CAAC,UAAU,CAC7B,GAAMC,CAAAA,CAAW,CAAGT,CAAM,CAACS,WAAP,EAApB,CACAd,OAAO,CAACC,GAAR,sDAA0Da,CAA1D,GACAxB,CAA0B,CAAC,EAAD,CAAI,eAAJ,CAAoBwB,CAApB,CAC7B,CAJqB,CAInB,GAJmB,CAMzB,CARD,CASH,CArD6C,CAoE9C,MAAO,CACJC,IAAI,CAdsB,QAAvBC,CAAAA,oBAAuB,CAAChC,CAAD,CAAYC,CAAZ,CAAyB,CAGlDF,CAAgB,CAACC,CAAD,CAAYC,CAAZ,CAAhB,CAEAE,OAAO,CAAC,CAAC,IAAD,CAAD,CAAS,UAAW,CACvBa,OAAO,CAACY,IAAR,mCACA,GAAMK,CAAAA,CAAQ,CAAGC,OAAO,CAACC,SAAR,6BAAuClC,CAAvC,EAAjB,CACAmB,CAAyB,CAACa,CAAD,CAE5B,CALM,CAMV,CAEM,CAGV,CAvEK,CAAN","sourcesContent":["define(['jquery','core/ajax'], function ($, Ajax) {\n    const loadBrightCoveJs = (accountId, playerId) => {\n        window.require.config({\n            'paths': {\n                'bc': `https://players.brightcove.net/${accountId}/${playerId}_default/index.min`\n            },\n            waitSeconds: 30\n        });\n    }\n\n    const set_course_module_progress = (id, videoid, progress) => {\n        let promise;\n\n        promise = Ajax.call([{\n            methodname: 'mod_html5player_set_module_progress',\n            args: {\n                id, // course module id.\n                videoid, // Brightcove video id.\n                progress, // Progress percentage\n            }\n        }]);\n\n        promise[0].then(function(results) {\n            console.log(results)\n\n        }).fail((e) => {\n            console.log(e)\n        });\n    }\n\n    // On Load meta data event and listener\n    const html5playerOnLoadMetaData = (player) => {\n        let interval;\n\n        player.on('loadedmetadata', function(e){\n            // console.log(player.duration());\n            const playListsItems = player.playlist();\n            playListsItems.forEach( (item, index  ) => {\n                console.log(item);\n                console.log(index);\n            });\n        });\n\n\n        player.on('playing',(e)=> {\n            console.info(`Video playing...`)\n            interval = setInterval(function(){\n                const currentTime = player.currentTime();\n                console.log(`Video playing. Video current progress is : ${currentTime}`)\n                set_course_module_progress(85,'6266514986001',currentTime)\n            }, 5000);\n\n        })\n    }\n\n    const initBrightCovePlayer = (accountId, playerId) => {\n\n        // Make brightcove js in Require js module as bc.\n        loadBrightCoveJs(accountId, playerId);\n\n        require(['bc'], function() {\n            console.info(`Brightcove player js loaded...`);\n            const myPlayer = videojs.getPlayer(`brightcove-player-${playerId}`);\n            html5playerOnLoadMetaData(myPlayer);\n            // myPlayer.on('playstart')\n        });\n    }\n\n    return {\n       init: initBrightCovePlayer\n   }\n});"],"file":"brightcove.min.js"}