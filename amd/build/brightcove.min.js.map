{"version":3,"sources":["../src/brightcove.js"],"names":["define","$","Ajax","interval","loadBrightCoveJs","accountId","playerId","window","require","config","waitSeconds","set_course_module_progress","id","videoid","progress","promise","call","methodname","args","then","results","console","log","fail","e","get_course_module_progress","player","info","$currentTime","currentTime","html5playerOnLoadMetaData","cm","video_id","on","html5playerOnPlay","course","setInterval","clearInterval","init","initBrightCovePlayer","myPlayer","videojs","getPlayer"],"mappings":"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","sourcesContent":["define(['jquery','core/ajax'], function ($, Ajax) {\n\n    let interval;\n\n    const loadBrightCoveJs = (accountId, playerId) => {\n        window.require.config({\n            'paths': {\n                'bc': `https://players.brightcove.net/${accountId}/${playerId}_default/index.min`\n            },\n            waitSeconds: 30\n        });\n    }\n\n    const set_course_module_progress = (id, videoid, progress) => {\n        let promise;\n\n        promise = Ajax.call([{\n            methodname: 'mod_html5player_set_module_progress',\n            args: {\n                id, // course module id.\n                videoid, // Brightcove video id.\n                progress, // Progress percentage\n            }\n        }]);\n\n        promise[0].then(function(results) {\n            console.log(results)\n\n        }).fail((e) => {\n            console.log(e)\n        });\n    }\n\n    const get_course_module_progress = (player, id, videoid) => {\n        let promise;\n\n        console.info(`Geting course video progress from store...`)\n        promise = Ajax.call([{\n            methodname: 'mod_html5player_get_module_progress',\n            args: {\n                id, // course module id.\n                videoid, // Brightcove video id.\n            }\n        }]);\n\n        promise[0].then(function(results) {\n            console.log(results)\n            const $currentTime = results.progress / 1000;\n            player.currentTime($currentTime)\n\n        }).fail((e) => {\n            console.log(e)\n        });\n    }\n\n    // On Load meta data event and listener\n    const html5playerOnLoadMetaData = (player, cm, video_id) => {\n        player.on('loadedmetadata', function(e){\n            get_course_module_progress(player, cm, video_id)\n            // console.log(player.duration());\n            // const playListsItems = player.playlist();\n            // playListsItems.forEach( (item, index  ) => {\n            //     console.log(item);\n            //     console.log(index);\n            // });\n        });\n    }\n\n\n    const html5playerOnPlay = (player,course, cm, video_id) => {\n        player.on('play',(e)=> {\n            console.info(`Video started playing...`)\n            interval = setInterval(function(){\n                const currentTime = player.currentTime();\n                console.log(`Video playing. Video current progress is : ${currentTime}`)\n                set_course_module_progress(cm,video_id,currentTime)\n            }, 5000);\n\n        })\n\n        player.on('pause',(e)=>{\n            clearInterval(interval);\n        })\n\n        player.on('ended',(e)=>{\n            const currentTime = player.currentTime();\n            console.log(`Video ended...`)\n            set_course_module_progress(cm,video_id,currentTime)\n            clearInterval(interval);\n        })\n\n        // player.on('stopped')\n    }\n\n    const initBrightCovePlayer = (course, cm, accountId, playerId, video_id) => {\n        // Make brightcove js in Require js module as bc.\n        loadBrightCoveJs(accountId, playerId);\n\n        require(['bc'], function() {\n            console.info(`Brightcove player js loaded...`);\n            const myPlayer = videojs.getPlayer(`brightcove-player-${playerId}`);\n            // Do meta loaded stuffs here.\n            console.info('Player meta data loaded...')\n            html5playerOnLoadMetaData(myPlayer, cm, video_id);\n\n            // Do Start playing stuffs here.\n            html5playerOnPlay(myPlayer,course, cm, video_id)\n        });\n    }\n\n    return {\n       init: initBrightCovePlayer\n   }\n});"],"file":"brightcove.min.js"}