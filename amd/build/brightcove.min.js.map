{"version":3,"sources":["../src/brightcove.js"],"names":["define","$","Ajax","interval","loadBrightCoveJs","accountId","playerId","window","require","config","waitSeconds","set_course_module_progress","id","videoid","progress","promise","call","methodname","args","then","results","console","info","completed","fail","e","log","get_course_module_progress","player","$currentTime","currentTime","html5playerOnLoadMetaData","cm","video_id","on","html5playerOnPlay","html5player","course","cmid","mediainfo","setInterval","progress_interval","clearInterval","duration","init","initBrightCovePlayer","JSON","parse","account_id","player_id","is_student","myPlayer","videojs","getPlayer"],"mappings":"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","sourcesContent":["define(['jquery','core/ajax'], function ($, Ajax) {\n\n    let interval;\n\n    const loadBrightCoveJs = (accountId, playerId) => {\n        window.require.config({\n            'paths': {\n                'bc': `https://players.brightcove.net/${accountId}/${playerId}_default/index.min`\n            },\n            waitSeconds: 30\n        });\n    }\n\n    const set_course_module_progress = (id, videoid, progress) => {\n        let promise;\n\n        promise = Ajax.call([{\n            methodname: 'mod_html5player_set_module_progress',\n            args: {\n                id, // course module id.\n                videoid, // Brightcove video id.\n                progress, // Progress percentage\n            }\n        }]);\n\n        promise[0].then(function(results) {\n            console.info(`Video completed : ${results.completed}`)\n\n        }).fail((e) => {\n            console.log(e)\n        });\n    }\n\n    const get_course_module_progress = (player, id, videoid) => {\n        let promise;\n\n        console.info(`Geting course video progress from store...`)\n        promise = Ajax.call([{\n            methodname: 'mod_html5player_get_module_progress',\n            args: {\n                id: +id, // course module id.\n                videoid: +videoid, // Brightcove video id.\n            }\n        }]);\n\n        promise[0].then(function(results) {\n            console.info(`Fetched result from store`);\n            let progress = results.progress\n            if (progress){\n                console.info(`Video progress is ${progress}ms`);\n                const $currentTime = results.progress / 1000;\n                player.currentTime($currentTime)\n            }else {\n                console.info(`Video progress is null`);\n            }\n\n        }).fail((e) => {\n            console.log(e)\n        });\n    }\n\n    // On Load meta data event and listener\n    const html5playerOnLoadMetaData = (player, cm, video_id) => {\n        player.on('loadedmetadata', function(e){\n            get_course_module_progress(player, cm, video_id)\n            // console.log(player.duration());\n            // const playListsItems = player.playlist();\n            // playListsItems.forEach( (item, index  ) => {\n            //     console.log(item);\n            //     console.log(index);\n            // });\n        });\n    }\n\n    const html5playerOnPlay = (player,html5player) => {\n\n        const course = html5player.course;\n        const cm = html5player.cmid;\n        let video_id = html5player.video_id;\n\n        player.on('play',(e)=> {\n            console.info(`Video started playing...`)\n            video_id = player.mediainfo.id;\n            interval = setInterval(function(){\n                const currentTime = player.currentTime();\n                console.log(`Video playing. Video current progress is : ${currentTime}`)\n                set_course_module_progress(cm,video_id,currentTime)\n            }, +html5player.progress_interval);\n\n        })\n\n        player.on('pause',(e)=>{\n            clearInterval(interval);\n        })\n\n        player.on('ended',(e)=>{\n            const currentTime = player.duration();\n            console.log(`Video ended...`)\n            set_course_module_progress(cm,video_id,currentTime)\n            clearInterval(interval);\n        })\n\n        // player.on('stopped')\n    }\n\n    // const initBrightCovePlayer = (course, cm, accountId, playerId, video_id) => {\n    const initBrightCovePlayer = (html5player) => {\n        html5player = JSON.parse(html5player);\n        // Make brightcove js in Require js module as bc.\n        loadBrightCoveJs(html5player.account_id, html5player.player_id);\n\n        require(['bc'], function(bc) {\n            console.info(`Brightcove player js loaded...`);\n\n            // Tracking is enabled for only student.\n            if (html5player.is_student){\n                const myPlayer = videojs.getPlayer(`brightcove-player-${html5player.player_id}`);\n                // Do meta loaded stuffs here.\n                console.info('Player meta data loaded...')\n                html5playerOnLoadMetaData(myPlayer, html5player.cmid, html5player.video_id);\n\n                // Do Start playing stuffs here.\n                html5playerOnPlay(myPlayer,html5player)\n            }\n        });\n    }\n\n    return {\n       init: initBrightCovePlayer\n   }\n});"],"file":"brightcove.min.js"}